{"ast":null,"code":"var _jsxFileName = \"/Users/prince/Priyansh/Development/react-js-course/01-starting-setup/src/components/ExpenseItem.js\";\n//Import CSS\nimport './ExpenseItem.css'; //Custom Component\n//Convention is to keep the function name same as file name\n//We can have only one root element in return; therefore we wrapped everything inside div and returned div\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem(props) {\n  const month = props.date.toLocaleString('en-US', {\n    month: 'long'\n  });\n  const day = props.date.toLocaleString('en-US', {\n    day: '2-digit'\n  });\n  const year = props.date.getFullYear();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.date.toISOString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"Rs. \", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n} //You can even perform calculations like 2+2 or use math functions inside curly brackets.\n\n\n_c = ExpenseItem;\nexport default ExpenseItem; //export function to make it available to other files\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Users/prince/Priyansh/Development/react-js-course/01-starting-setup/src/components/ExpenseItem.js"],"names":["ExpenseItem","props","month","date","toLocaleString","day","year","getFullYear","toISOString","title","amount"],"mappings":";AAAA;AAEA,OAAO,mBAAP,C,CACA;AACA;AACA;;;;AACA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAACF,IAAAA,KAAK,EAAE;AAAR,GAAnC,CAAd;AACA,QAAMG,GAAG,GAAGJ,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAACC,IAAAA,GAAG,EAAE;AAAN,GAAnC,CAAZ;AACA,QAAMC,IAAI,GAAGL,KAAK,CAACE,IAAN,CAAWI,WAAX,EAAb;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,cAAjB;AAAA,4BACE;AAAA,gBAAMN,KAAK,CAACE,IAAN,CAAWK,WAAX;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAG,2BAAjB;AAAA,8BACE;AAAA,kBAAKP,KAAK,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAG,qBAAjB;AAAA,2BAA4CR,KAAK,CAACS,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;;;KAhBSV,W;AAiBT,eAAeA,WAAf,C,CAA4B","sourcesContent":["//Import CSS\n\nimport './ExpenseItem.css';\n//Custom Component\n//Convention is to keep the function name same as file name\n//We can have only one root element in return; therefore we wrapped everything inside div and returned div\nfunction ExpenseItem(props) {\n  const month = props.date.toLocaleString('en-US', {month: 'long'});\n  const day = props.date.toLocaleString('en-US', {day: '2-digit'});\n  const year = props.date.getFullYear();\n  \n  return (\n    <div className = \"expense-item\"> \n      <div>{props.date.toISOString()}</div>\n      <div className = \"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className = \"expense-item__price\">Rs. {props.amount}</div>\n      </div>\n    </div>\n  );\n}\n\n//You can even perform calculations like 2+2 or use math functions inside curly brackets.\nexport default ExpenseItem; //export function to make it available to other files\n"]},"metadata":{},"sourceType":"module"}